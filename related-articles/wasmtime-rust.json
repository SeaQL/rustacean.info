[
  {
    "title": "Plugins with Rust and WASI Preview 2",
    "link": "https://benw.is/posts/plugins-with-rust-and-wasi"
  },
  {
    "title": "Wasmi's New Execution Engine - Faster Than Ever | Wasmi Labs",
    "link": "https://wasmi-labs.github.io/blog/posts/wasmi-v0.32/"
  },
  {
    "title": "Arroyo with Micah Wylde - Rust in Production Podcast | corrode Rust Consulting",
    "link": "https://corrode.dev/podcast/s01e04-arroyo"
  },
  {
    "title": "Bytecode Alliance — Announcing wasi-threads",
    "link": "https://bytecodealliance.org/articles/wasi-threads"
  },
  {
    "title": "How to run WebAssembly from your Rust Program - 21 Lessons",
    "link": "https://21-lessons.com/how-to-run-webassembly-from-your-rust-program/"
  },
  {
    "title": "Plugins for Rust",
    "link": "https://reorchestrate.com/posts/plugins-for-rust/"
  },
  {
    "title": "Bytecode Alliance — Cranelift Progress in 2022",
    "link": "https://bytecodealliance.org/articles/cranelift-progress-2022"
  },
  {
    "title": "Why Rust? — Rerun",
    "link": "https://www.rerun.io/blog/why-rust"
  },
  {
    "title": "Bytecode Alliance — Wasmtime Reaches 1.0: Fast, Safe and Production Ready!",
    "link": "https://bytecodealliance.org/articles/wasmtime-1-0-fast-safe-and-production-ready"
  },
  {
    "title": "Containerless! How to Run WebAssembly Workloads on Kubernetes with Rust | Okta Developer",
    "link": "https://developer.okta.com/blog/2022/01/28/webassembly-on-kubernetes-with-rust"
  },
  {
    "title": "Bytecode Alliance — Cranelift Progress Report: A Look Back at 2021",
    "link": "https://bytecodealliance.org/articles/cranelift-progress-2021"
  },
  {
    "title": "y|sndr - Rust as a platform for IoT",
    "link": "https://blog.ysndr.de/posts/essays/2021-12-12-rust-for-iot/"
  },
  {
    "title": "Rust programs written entirely in Rust · sunfishcode's blog",
    "link": "https://blog.sunfishcode.online/rust-programs-entirely-in-rust/"
  },
  {
    "title": "Cross compiling Windows binaries from Linux",
    "link": "https://jake-shadle.github.io/xwin/"
  },
  {
    "title": "Paul Butler – Calling WebAssembly from Rust",
    "link": "https://paulbutler.org/2021/calling-webassembly-from-rust/"
  },
  {
    "title": "Zig Makes Rust Cross-compilation Just Work | Actually.fyi",
    "link": "https://actually.fyi/posts/zig-makes-rust-cross-compilation-just-work/"
  },
  {
    "title": "Plugins in Rust: The Technologies | NullDeref",
    "link": "https://nullderef.com/blog/plugin-tech/"
  },
  {
    "title": "A primer on code generation in Cranelift by Benjamin Bouvier",
    "link": "https://blog.benj.me/2021/02/17/cranelift-codegen-primer/"
  },
  {
    "title": "A New Backend for Cranelift, Part 1: Instruction Selection - Mozilla Hacks - the Web developer blog",
    "link": "https://hacks.mozilla.org/2020/10/a-new-backend-for-cranelift-part-1-instruction-selection/"
  },
  {
    "title": "A New Backend for Cranelift, Part 1: Instruction Selection",
    "link": "https://cfallin.org/blog/2020/09/18/cranelift-isel-1/"
  },
  {
    "title": "Webassembly Without The Browser Part 1 | Alexandru Ene blog",
    "link": "https://alexene.dev/2020/08/17/webassembly-without-the-browser-part-1.html"
  },
  {
    "title": "WebAssembly as a Platform for Abstraction · Michael-F-Bryan",
    "link": "http://adventures.michaelfbryan.com/posts/wasm-as-a-platform-for-abstraction/"
  }
]