[
  {
    "date": "2024-01-10",
    "title": "This Month in Rust OSDev: December 2023 | Rust OSDev",
    "link": "https://rust-osdev.com/this-month/2023-12/"
  },
  {
    "date": "2023-09-13",
    "title": "This Month in Rust OSDev: August 2023 | Rust OSDev",
    "link": "https://rust-osdev.com/this-month/2023-08/"
  },
  {
    "date": "2023-09-06",
    "title": "Tweede golf",
    "link": "https://tweedegolf.nl/en/blog/101/are-we-embedded-yet"
  },
  {
    "date": "2023-07-19",
    "title": "Asynchronous Rust on Cortex-M Microcontrollers | Interrupt",
    "link": "https://interrupt.memfault.com/blog/embedded-async-rust"
  },
  {
    "date": "2023-07-05",
    "title": "Nine Rules for Running Rust on the Web and on Embedded | by Carl M. Kadie | Towards Data Science",
    "link": "https://towardsdatascience.com/nine-rules-for-running-rust-on-the-web-and-on-embedded-94462ef249a2"
  },
  {
    "date": "2022-09-28",
    "title": "Why Volvo thinks you should have Rust in your car | Volvo Cars Engineering",
    "link": "https://medium.com/volvo-cars-engineering/why-volvo-thinks-you-should-have-rust-in-your-car-4320bd639e09"
  },
  {
    "date": "2022-01-19",
    "title": "Rust on Apache NuttX OS",
    "link": "https://lupyuen.github.io/articles/rust2"
  },
  {
    "date": "2021-12-29",
    "title": "Rust Embedded Working Group",
    "link": "https://blog.rust-embedded.org/this-year-in-embedded-rust-2021/"
  },
  {
    "date": "2021-10-20",
    "title": "Structuring, testing and debugging procedural macro crates  - Ferrous Systems",
    "link": "https://ferrous-systems.com/blog/testing-proc-macros/"
  },
  {
    "date": "2021-09-29",
    "title": "AnyLeaf articles: Writing embedded firmware using Rust",
    "link": "https://www.anyleaf.org/blog/writing-embedded-firmware-using-rust"
  },
  {
    "date": "2021-04-21",
    "title": "Using std in embedded Rust",
    "link": "https://timmmm.github.io/std-embedded-rust/index.html"
  },
  {
    "date": "2021-03-24",
    "title": "The GPIO war: macro bunkers for typestate explosions - cuervo",
    "link": "https://www.ecorax.net/macro-bunker-1/"
  },
  {
    "date": "2021-03-03",
    "title": "Testing a driver crate  - Ferrous Systems",
    "link": "https://ferrous-systems.com/blog/test-driver-crate/"
  },
  {
    "date": "2020-10-07",
    "title": "Getting Started with the nRF52840 in Rust – daschl writes. sometimes.",
    "link": "https://nitschinger.at/Getting-Started-with-the-nRF52840-in-Rust/"
  },
  {
    "date": "2020-08-18",
    "title": "Tweede golf",
    "link": "https://tweedegolf.nl/blog/39/why-rust-is-a-great-fit-for-embedded-software"
  },
  {
    "date": "2020-08-18",
    "title": "Run Rust on your embedded device from VSCode in one click  - Ferrous Systems",
    "link": "https://ferrous-systems.com/blog/run-rust-on-your-embedded-device-from-vscode/"
  },
  {
    "date": "2020-03-03",
    "title": "A look into ways to implement and share data with interrupt handlers in Rust (Update 1) | The subconscious mumblings of therealprof",
    "link": "https://therealprof.github.io/blog/interrupt-comparison/"
  },
  {
    "date": "2020-02-04",
    "title": "Rust Embedded Working Group",
    "link": "https://rust-embedded.github.io/blog/newsletter-23/"
  },
  {
    "date": "2019-12-17",
    "title": "From Zero to main(): Bare metal Rust | Interrupt",
    "link": "https://interrupt.memfault.com/blog/zero-to-main-rust-1"
  },
  {
    "date": "2019-03-19",
    "title": "Implementing a static stack usage analysis tool | Embedded in Rust",
    "link": "https://blog.japaric.io/stack-analysis/"
  },
  {
    "date": "2019-03-12",
    "title": "Rust Embedded Working Group",
    "link": "https://rust-embedded.github.io/blog/newsletter-16/"
  },
  {
    "date": "2019-02-26",
    "title": "Rust Embedded Working Group",
    "link": "https://rust-embedded.github.io/blog/newsletter-15/"
  },
  {
    "date": "2018-06-12",
    "title": "Sponsor work on Rust! · Aaron Turon",
    "link": "https://aturon.github.io/sponsor/"
  },
  {
    "date": "2018-05-01",
    "title": "Embedded Rust Experiments - Flipping some bits high on STM32VLDISCOVERY board",
    "link": "https://nercury.github.io/rust/embedded/experiments/2018/04/29/rust-embedded-01-discovery-vl-flipping-bits.html"
  },
  {
    "date": "2018-02-20",
    "title": "Zero cost stack overflow protection for ARM Cortex-M devices | Embedded in Rust",
    "link": "http://blog.japaric.io/stack-overflow-protection/"
  },
  {
    "date": "2018-01-23",
    "title": "Brave new I/O | Embedded in Rust",
    "link": "http://blog.japaric.io/brave-new-io/"
  },
  {
    "date": "2017-08-01",
    "title": "RTFM v2: simpler, less overhead and more device support | Embedded in Rust",
    "link": "http://blog.japaric.io/rtfm-v2/"
  },
  {
    "date": "2017-05-09",
    "title": "Fearless concurrency in your microcontroller | Embedded in Rust",
    "link": "http://blog.japaric.io/fearless-concurrency/"
  },
  {
    "date": "2017-05-02",
    "title": "Rust your ARM microcontroller! | Embedded in Rust",
    "link": "http://blog.japaric.io/quickstart/"
  }
]