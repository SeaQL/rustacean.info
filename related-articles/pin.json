[
  {
    "date": "2024-07-24",
    "title": "Pinned places",
    "link": "https://without.boats/blog/pinned-places/"
  },
  {
    "date": "2024-07-24",
    "title": "Pin",
    "link": "https://without.boats/blog/pin/"
  },
  {
    "date": "2024-02-07",
    "title": "AsyncWrite and a Tale of Four Implementations | by Razieh Behjati, PhD | ITNEXT",
    "link": "https://medium.com/@razieh.behjati/asyncwrite-and-a-tale-of-four-implementations-e63aef8397f7"
  },
  {
    "date": "2023-10-04",
    "title": "Async Iteration III: The Async Iterator Trait",
    "link": "https://blog.yoshuawuyts.com/async-iterator-trait/"
  },
  {
    "date": "2023-03-29",
    "title": "Linearity and Control",
    "link": "https://blog.yoshuawuyts.com/linearity-and-control/"
  },
  {
    "date": "2022-12-07",
    "title": "Self-referential types for fun and profit | More Stina Blog!",
    "link": "https://morestina.net/blog/1868/self-referential-types-for-fun-and-profit"
  },
  {
    "date": "2022-10-19",
    "title": "Asynchronous programming in Rust | Opensource.com",
    "link": "https://opensource.com/article/22/10/asynchronous-programming-rust"
  },
  {
    "date": "2022-10-05",
    "title": "Language feature: in-place construction | blog",
    "link": "https://y86-dev.github.io/blog/safe-pinned-initialization/in-place.html"
  },
  {
    "date": "2022-09-28",
    "title": "Overview: Safe Pinned Initialization | blog",
    "link": "https://y86-dev.github.io/blog/safe-pinned-initialization/overview.html"
  },
  {
    "date": "2022-04-06",
    "title": "Futures Nostalgia",
    "link": "https://fasterthanli.me/articles/futures-nostalgia"
  },
  {
    "date": "2022-03-09",
    "title": "Safe Pin Projections Through View Types",
    "link": "https://blog.yoshuawuyts.com/safe-pin-projections-through-view-types/"
  },
  {
    "date": "2022-01-26",
    "title": "Non-Lazy Futures Considered Harmful",
    "link": "https://swatinem.de/blog/non-lazy-futures/"
  },
  {
    "date": "2021-08-25",
    "title": "Pin, Unpin, and why Rust needs them",
    "link": "https://blog.adamchalmers.com/pin-unpin/"
  },
  {
    "date": "2021-07-28",
    "title": "Understanding Rust futures by going way too deep",
    "link": "https://fasterthanli.me/articles/understanding-rust-futures-by-going-way-too-deep"
  },
  {
    "date": "2021-04-07",
    "title": "A Tour of Safe Tracing GC Designs in Rust - In Pursuit of Laziness",
    "link": "https://manishearth.github.io/blog/2021/04/05/a-tour-of-safe-tracing-gc-designs-in-rust/"
  },
  {
    "date": "2020-10-21",
    "title": "Create Your Own PineTime Watch Face in Rust... And Publish on crates.io",
    "link": "https://lupyuen.github.io/pinetime-rust-mynewt/articles/watchface"
  },
  {
    "date": "2020-03-31",
    "title": "Async/Await | Writing an OS in Rust",
    "link": "https://os.phil-opp.com/async-await/"
  },
  {
    "date": "2019-12-24",
    "title": "Announcing Tokio-Compat | Tokio - An asynchronous Rust runtime",
    "link": "https://tokio.rs/blog/2019-12-compat/"
  },
  {
    "date": "2019-12-03",
    "title": "Down and dirty with Future - Rust Crash Course lesson 8",
    "link": "https://www.snoyman.com/blog/2019/12/rust-crash-course-08-down-dirty-future"
  },
  {
    "date": "2018-10-30",
    "title": "Shifgrethor III: Rooting",
    "link": "https://boats.gitlab.io/blog/post/shifgrethor-iii/"
  }
]